name: Build and Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to release (e.g., 1.0.0)'
        required: true
        default: '1.0.0'

permissions:
  contents: write
  packages: write

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest, windows-latest]
        node-version: [18.x]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Check build files (macOS)
      if: matrix.os == 'macos-latest'
      run: |
        echo "=== Checking build files ==="
        ls -la build/
        echo "=== Checking if icon.ico exists ==="
        if [ -f "build/icon.ico" ]; then
          echo "✅ icon.ico exists"
        else
          echo "❌ icon.ico not found"
        fi

    - name: Check build files (Windows)
      if: matrix.os == 'windows-latest'
      run: |
        echo "=== Checking build files ==="
        dir build\
        echo "=== Checking if icon.ico exists ==="
        if (Test-Path "build\icon.ico") {
          echo "✅ icon.ico exists"
        } else {
          echo "❌ icon.ico not found"
        }

    - name: Build application
      run: |
        npm run build:main
        npm run build:renderer

    - name: Build and Publish for macOS
      if: matrix.os == 'macos-latest'
      run: |
        npm run build:mac:ci
      env:
        CSC_IDENTITY_AUTO_DISCOVERY: false
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Build and Publish for Windows
      if: matrix.os == 'windows-latest'
      run: |
        npm run build:win:ci
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: List build artifacts (macOS)
      if: matrix.os == 'macos-latest'
      run: |
        echo "=== Build artifacts ==="
        ls -la dist/
        echo "=== Current directory ==="
        pwd
        echo "=== Files in dist ==="
        find dist/ -type f -name "*.dmg" -o -name "*.exe" -o -name "*.zip"

    - name: List build artifacts (Windows)
      if: matrix.os == 'windows-latest'
      run: |
        echo "=== Build artifacts ==="
        dir dist\
        echo "=== Current directory ==="
        pwd
        echo "=== Files in dist ==="
        Get-ChildItem -Path dist\ -Recurse -Include "*.dmg", "*.exe", "*.zip" 